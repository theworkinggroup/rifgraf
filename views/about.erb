<script language="javascript" type="text/javascript">
  function delete_graph(graph, callback) {
    $.ajax({
      url: '/graphs/' + graph, 
      type: 'delete',
      success: function(response) { eval(callback) }
    })
  }
  
  function delete_selected_graphs() {
    $('table.charts input:checked').each(function(){
      delete_graph(this.name, 'null');
    });
    window.location.reload();
  }
  
  function show_graph() {
    var url = '/graphs/';
    var first = true;
    $('table.charts input:checked').each(function(){
      if (first) {
        first = false;
        url += this.name + '?and=';
      } else {
        url += this.name + ',';
      }
    })
    window.location = '<%=HOME_URL[ENV['RACK_ENV']]%>'+url;
  }
</script>

<div id="content">
  <img id="sample" src="sample.png" />
  <h2>Available charts</h2>
  <% if graphs.empty? %>
    <p>No graphs available</p>
  <% else %>
    <table class="charts" cellpadding=0 cellspacing=0>
      <% graphs.each do |graph| %>
        <tr>
          <td><input type="checkbox" name="<%=graph%>"/></td>
          <td><a href="<%=HOME_URL[ENV['RACK_ENV']]%>/graphs/<%= graph %>"><%= graph %></a></td>
          <td>(<a href="#" onclick="delete_graph('<%= graph %>', 'window.location.reload()');return false;">Delete</a>)</td>
        </tr>
      <% end %>
      <tr>
        <td colspan="3">
          <input type="button" value="Show selected charts" onclick="show_graph()">
          <input type="button" value="Delete selected charts" onclick="delete_selected_graphs()">
        </td>
      </tr>
    </table>
  <% end %>

  <h2>Introduction</h2>
  <p id="blurb">Rifgraf is a fire-and-forget web service for displaying graphs of data collected over time.  Post your data points periodically via rest calls.  Then view a graph of the data at any time in the future.</p>

  <p>Let's try it!</p>

  <h2>1. Post some data points.</h2>

  <p>You'll probably do this from a cron job, but try it from an irb session first.</p>

  <code>
  RestClient.post '<%=HOME_URL[ENV['RACK_ENV']]%>/graphs/sample', :value =&gt; rand(99)
  </code>

  <p>Or for the Ruby-impaired, from the shell:</p>

  <code>
  $ curl <%=HOME_URL[ENV['RACK_ENV']]%>/graphs/sample -X POST -d value=$RANDOM
  </code>

  <p>Replace "sample" with whatever graph name you want.  This is the graph key.</p>

  <h2>2. Visit your graph.</h2>

  <p><a href="/graphs/sample"><%=HOME_URL[ENV['RACK_ENV']]%>/graphs/sample</a></p>

  <p>Replace "sample" with your chosen key.  You're catching on, right?</p>

  <h2>3. Bask in the glory of the zoomable graph.</h2>

  <p>...with no clutter in your app's main database.</p>

  <p>Rifgraf automatically timestamps data that you post, although you can include a :timestamp parameter if  you want to use a different one.  i.e.</p>

  <code>
  RestClient.post '<%=HOME_URL[ENV['RACK_ENV']]%>/graphs/sample', :value =&gt; 42, :timestamp =&gt; '1999-31-12'
  </code>

  <p>Clear your all data from a graph and start fresh - the "how" won't be surprising to restafarians:</p>

  <code>
  RestClient.delete '<%=HOME_URL[ENV['RACK_ENV']]%>/graphs/sample'
  </code>

  <p>Compare multiple graphs on the same chart with the "and" parameter: <a href="/graphs/pirates?and=ninjas,robots"><%=HOME_URL[ENV['RACK_ENV']]%>/graphs/pirates?and=ninjas,robots</a></p>

  <p>Use rifgraf as a service by posting to rifgraf.heroku.com, or <a href="http://github.com/adamwiggins/rifgraf">grab the source</a> and host your own.</p>

  <hr/>

  <p>Created by <a href="http://adam.blog.heroku.com/">Adam Wiggins</a>, released under the <a href="http://www.opensource.org/licenses/mit-license.php">MIT license</a>.  Built with <a href="http://github.com/bmizerany/sinatra/tree/master">Sinatra</a>, <a href="http://sequel.rubyforge.org/">Sequel</a>, <a href="http://www.ruby-lang.org/">Ruby</a>, and <a href="http://www.amcharts.com/">amCharts</a>.</p>

</div>